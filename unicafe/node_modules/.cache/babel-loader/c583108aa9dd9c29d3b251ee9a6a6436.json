{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\FullStackOpen2020\\\\Part1\\\\partOnePros\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistic = ({\n  text\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n    class: \"partTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, text));\n};\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  average,\n  percentage\n}) => {\n  if (total !== 0) {\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"headerTbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Statistics\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Statistic, {\n      text: \"Good\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"Neutral\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"Bad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"Total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"Average\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"Percentage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Statistic, {\n      text: good,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: percentage + \"%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"No feedback given\"));\n  }\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setAverage(average + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setAverage(average + 0);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setAverage(average - 1);\n  };\n\n  const Button = ({\n    handleClick,\n    text\n  }) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, text);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    total: total,\n    average: average === 0 ? 0 : average / total,\n    percentage: good === 0 ? 0 : good / total * 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/victo/FullStackOpen2020/Part1/partOnePros/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistic","text","Statistics","good","neutral","bad","total","average","percentage","App","setGood","setNeutral","setBad","setTotal","setAverage","handleGood","handleNeutral","handleBad","Button","handleClick","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B,sBACE,uDAEE;AAAI,IAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,IAAvB,CAFF,CADF;AAMD,CAPD;;AASA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,GAAhB;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA,OAA5B;AAAqCC,EAAAA;AAArC,CAAD,KAAsD;AACvE,MAAGF,KAAK,KAAK,CAAb,EAAe;AACb,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAJF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,UAAU,GAAG,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAZF,CADF;AAuBD,GAxBD,MAwBO;AACL,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CADF;AAMD;AACF,CAjCD;;AAmCA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUO,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMO,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACQ,KAAD,EAAQO,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUO,UAAV,IAAwBhB,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAACP,IAAI,GAAG,CAAR,CAAP;AACAU,IAAAA,QAAQ,CAACP,KAAK,GAAG,CAAT,CAAR;AACAQ,IAAAA,UAAU,CAACP,OAAO,GAAG,CAAX,CAAV;AACD,GAJD;;AAKA,QAAMS,aAAa,GAAG,MAAM;AAC1BL,IAAAA,UAAU,CAACP,OAAO,GAAG,CAAX,CAAV;AACAS,IAAAA,QAAQ,CAACP,KAAK,GAAG,CAAT,CAAR;AACAQ,IAAAA,UAAU,CAACP,OAAO,GAAG,CAAX,CAAV;AACD,GAJD;;AAKA,QAAMU,SAAS,GAAG,MAAM;AACtBL,IAAAA,MAAM,CAACP,GAAG,GAAG,CAAP,CAAN;AACAQ,IAAAA,QAAQ,CAACP,KAAK,GAAG,CAAT,CAAR;AACAQ,IAAAA,UAAU,CAACP,OAAO,GAAG,CAAX,CAAV;AACD,GAJD;;AAOA,QAAMW,MAAM,GAAG,CAAC;AAACC,IAAAA,WAAD;AAAclB,IAAAA;AAAd,GAAD,KAAyB;AACtC,wBACE;AAAQ,MAAA,OAAO,EAAEkB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BlB,IAA/B,CADF;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEc,UAArB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEC,aAArB;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEC,SAArB;AAAgC,IAAA,IAAI,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAOE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,OAAO,EAAEC,OAAO,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,OAAO,GAAGD,KALzC;AAME,IAAA,UAAU,EAAEH,IAAI,KAAK,CAAT,GAAa,CAAb,GAAkBA,IAAI,GAAGG,KAAR,GAAiB,GANhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAkBD,CAjDD;;AAmDAP,QAAQ,CAACqB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Statistic = ({text}) => {\n  return (\n    <>\n      {/* <p>{text} {value}</p> */}\n      <td class=\"partTable\">{text}</td>\n    </>\n  );\n}\n\nconst Statistics = ({good, neutral, bad, total, average, percentage}) => {\n  if(total !== 0){\n    return (\n      <tbody>\n        <tr>\n          <td class=\"headerTbl\">Statistics</td>\n        </tr>\n        <tr>\n          <Statistic text=\"Good\" />\n          <Statistic text=\"Neutral\" />\n          <Statistic text=\"Bad\" />\n          <Statistic text=\"Total\" />\n          <Statistic text=\"Average\" />\n          <Statistic text=\"Percentage\" />\n        </tr>\n        <tr>\n          <Statistic text={good} />\n          <Statistic text={neutral} />\n          <Statistic text={bad} />\n          <Statistic text={total} />\n          <Statistic text={average} />\n          <Statistic text={percentage + \"%\"} />\n        </tr>\n      </tbody>\n    );\n  } else {\n    return (\n      <>\n        <h3>Statistics</h3>\n        <p>No feedback given</p>\n      </>\n    );\n  }\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setAverage(average + 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setAverage(average + 0);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setAverage(average - 1);\n  };\n\n\n  const Button = ({handleClick, text}) => {\n    return (\n      <button onClick={handleClick}>{text}</button>\n    )\n  }\n\n  return (\n    <div class=\"wrapper\">\n      <h3>Give Feedback</h3>\n\n      <Button handleClick={handleGood} text=\"good\" />\n      <Button handleClick={handleNeutral} text=\"neutral\" />\n      <Button handleClick={handleBad} text=\"bad\" />\n\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={total}\n        average={average === 0 ? 0 : average / total}\n        percentage={good === 0 ? 0 : (good / total) * 100}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}