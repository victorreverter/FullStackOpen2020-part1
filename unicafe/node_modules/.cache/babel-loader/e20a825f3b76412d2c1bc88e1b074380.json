{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\FullStackOpen2020\\\\Part1\\\\partOnePros\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => {};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setAverage(average + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setAverage(average + 0);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setAverage(average - 1);\n  };\n\n  const Button = ({\n    handleClick,\n    text\n  }) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, text);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Good \", good), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Neutral \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Bad \", bad), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Total \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Average \", average === 0 ? 0 : average / total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Positive \", good === 0 ? 0 : good / total * 100, \"%\"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/victo/FullStackOpen2020/Part1/partOnePros/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","props","App","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","average","setAverage","handleGood","handleNeutral","handleBad","Button","handleClick","text","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = (props) => {\n  \n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n    setAverage(average + 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n    setAverage(average + 0);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n    setAverage(average - 1);\n  };\n\n\n  const Button = ({handleClick, text}) => {\n    return (\n      <button onClick={handleClick}>{text}</button>\n    )\n  }\n\n  return (\n    <div>\n      <h3>Give Feedback</h3>\n\n      <Button handleClick={handleGood} text=\"good\" />\n      <Button handleClick={handleNeutral} text=\"neutral\" />\n      <Button handleClick={handleBad} text=\"bad\" />\n\n      <h3>Statistics</h3>\n      <p>Good {good}</p>\n      <p>Neutral {neutral}</p>\n      <p>Bad {bad}</p>\n      <p>Total {total}</p>\n      <p>Average {(average === 0) ? 0 : average / total}</p>\n      <p>Positive {(good === 0) ? 0 : (good / total)*100 }%</p>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}